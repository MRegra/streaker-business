name: Full Pipeline (CI → Version Bump → GHCR → Deploy Staging)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write  # Required to push to the repo

jobs:
  # CI + Test
  
  # Build & Push All Images to GHCR
  push-to-ghcr:
    #needs: sync-main-to-staging
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3

      - id: get_versions
        run: |
          echo "VERSION_TAG_BACKEND=$(cat VERSION_BACKEND)" >> $GITHUB_ENV
          echo "VERSION_TAG_FRONTEND=$(cat VERSION_FRONTEND)" >> $GITHUB_ENV

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}
      - name: Generate SHA Tag
        run: echo "GIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: Push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: |
            ghcr.io/mregra/streaker-backend:latest
            ghcr.io/mregra/streaker-backend:${{ env.VERSION_TAG_BACKEND }}
            ghcr.io/mregra/streaker-backend:${{ env.GIT_SHA }}

      - name: Push caddy image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: infra/caddy/Dockerfile
          push: true
          tags: ghcr.io/mregra/streaker-caddy-prod:latest

  # Deploy to Staging Server
  deploy-staging:
    needs: push-to-ghcr
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          ref: staging

      - name: Package files
        run: |
          mkdir deploy_package
          cp docker-compose.yml deploy_package/
          cp -r infra deploy_package/
          tar -czf deploy.tar.gz deploy_package

      - name: Upload tar.gz to staging VPS
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ vars.SSH_PORT }}
          source: "deploy.tar.gz"
          target: "~/streaker"
          overwrite: true

      - name: Extract and deploy on VPS
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          envs: CR_PAT,DISCORD_STREAKER_WEBHOOK
          script: |
            echo "===== Starting the script now ====="
            cd ~/streaker
            tar -xzf deploy.tar.gz
            cd deploy_package
            export SPRING_DATASOURCE_URL="${{ vars.SPRING_DATASOURCE_URL }}"
            export JWT_SECRET="${{ secrets.JWT_SECRET }}"
            export SPRING_DATASOURCE_USERNAME="${{ secrets.SPRING_DATASOURCE_USERNAME }}"
            export SPRING_DATASOURCE_PASSWORD="${{ secrets.SPRING_DATASOURCE_PASSWORD }}"
            export ADMIN_USERNAME="${{ secrets.ADMIN_USERNAME }}"
            export ADMIN_EMAIL="${{ secrets.ADMIN_EMAIL }}"
            export ADMIN_PASSWORD="${{ secrets.ADMIN_PASSWORD }}"
            export POSTGRES_DB="${{ vars.POSTGRES_DB }}"
            export POSTGRES_USER="${{ secrets.POSTGRES_USER }}"
            export POSTGRES_PASSWORD="${{ secrets.POSTGRES_PASSWORD }}"
            export VALID_ORIGIN_ENDPOINT="${{ vars.VALID_ORIGIN_ENDPOINT }}"
            export DISCORD_STREAKER_WEBHOOK="${{ secrets.DISCORD_STREAKER_WEBHOOK }}"
            export DOMAIN="${{ vars.DOMAIN }}"
            export GF_SECURITY_ADMIN_USER="${{ secrets.GF_SECURITY_ADMIN_USER }}"
            export GF_SECURITY_ADMIN_PASSWORD="${{ secrets.GF_SECURITY_ADMIN_PASSWORD }}"
            export CR_PAT="${{ secrets.CR_PAT }}"
            export SPRING_PROFILES_ACTIVE="${{ vars.SPRING_PROFILES_ACTIVE }}"
            export GIT_USERNAME="mregra"
            
            bash ./infra/scripts/deploy.sh
