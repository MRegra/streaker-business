name: Build, Push to GHCR, and Deploy

on:
  workflow_dispatch:

jobs:
  push-to-ghcr:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Read backend version
        id: get_version
        run: |
          versionbackend=$(cat VERSION_BACKEND)
          echo "VERSION_TAG_BACKEND=$versionbackend" >> $GITHUB_ENV
          versionfrontend=$(cat VERSION_FRONTEND)
          echo "VERSION_TAG_FRONTEND=$versionfrontend" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Build & push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: |
            ghcr.io/mregra/streaker-backend:latest
            ghcr.io/mregra/streaker-backend:${{ env.VERSION_TAG_BACKEND }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build & push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: |
            ghcr.io/mregra/streaker-frontend:latest
            ghcr.io/mregra/streaker-frontend:${{ env.VERSION_TAG_FRONTEND }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build & push caddy-prod image
        uses: docker/build-push-action@v5
        with:
          context: ./infra/caddy
          push: true
          tags: |
            ghcr.io/mregra/streaker-caddy-prod:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: push-to-ghcr
    runs-on: ubuntu-latest
    if: success()

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: List current directory contents
        run: |
          echo "Present working directory: $(pwd)"
          ls -al

      - name: Create deployment archive
        run: |
          mkdir deploy_package
          cp docker-compose.yml deploy_package/
          cp -r infra deploy_package/
          tar -czf deploy.tar.gz deploy_package

      - name: Upload tar.gz to VPS
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "deploy.tar.gz"
          target: "~/streaker"

      - name: Extract and deploy on VPS
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          envs: CR_PAT,DISCORD_STREAKER_WEBHOOK
          script: |
            cd ~/streaker
            tar -xzf deploy.tar.gz
            cd deploy_package
            export CR_PAT="${{ secrets.CR_PAT }}"
            export DISCORD_STREAKER_WEBHOOK="${{ secrets.DISCORD_STREAKER_WEBHOOK }}"
            bash ./infra/scripts/deploy.sh

