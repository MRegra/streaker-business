services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: streaker-backend
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./prod.env
    ports:
      - "80:8080"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "--silent", "--fail", "http://localhost:8080/api/actuator/health"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 15s
    networks:
      - streaker-net
    volumes:
      - streaker-backend-logs:/app/logs
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  db:
    image: postgres:15
    container_name: streaker-postgres
    restart: always
    environment:
      POSTGRES_DB: streaker
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 15s
    networks:
      - streaker-net

  fluent-bit:
    image: fluent/fluent-bit:latest
    container_name: streaker-fluent-bit
    restart: unless-stopped
    volumes:
      - streaker-backend-logs:/app/logs
      - ./logging/fluent-bit/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf
      - ./logging/fluent-bit/parsers.conf:/fluent-bit/etc/parsers.conf
    depends_on:
      - loki
    networks:
      - streaker-net

  loki:
    image: grafana/loki:2.9.2
    container_name: streaker-loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    volumes:
      - ./logging/loki/config.yaml:/etc/loki/config.yaml
    networks:
      - streaker-net

  grafana:
    image: grafana/grafana:latest
    container_name: streaker-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./logging/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - streaker-net

volumes:
  pgdata:
  streaker-backend-logs:

networks:
  streaker-net:
